AWSTemplateFormatVersion: '2010-09-09'
Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX1" : "ami-0080e4c5bc078760e"
      "AMALINUX2" : "ami-0de53d8956e8dcf80"
    us-west-1:
      "AMALINUX1" : "ami-0ec6517f6edbf8044"
      "AMALINUX2" : "ami-0a16c82eb0cc3aad8"
    ap-south-1:
      "AMALINUX1" : "ami-0ad42f4f66f6c1cc9"
      "AMALINUX2" : "ami-09243352e7fc54770"
Resources:
  ec2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT3M
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX2]
      InstanceType: t2.micro
      SubnetId: !ImportValue dockcont-basinfra-pubsubid
      KeyName: !ImportValue dockcont-basinfra-keypairid
      SecurityGroupIds:
        - !ImportValue dockcont-basinfra-EC2SGid
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ec2Instance --configsets setupec2 --region ${AWS::Region}
            yum -y update
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region}
            amazon-linux-extras enable docker
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "ec2"]]
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          setupec2:
            - "configureCFN"
            - "installdocker"
            - "runweatherapp"
        configureCFN:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.ec2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource ec2Instance --configsets setupec2 --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        installdocker:
          packages:
            yum:
              docker: []
          commands:
            add_user:
              command: "usermod -a -G docker ec2-user"
          services:
            sysvinit:
              docker:
                enabled: "true"
                ensureRunning: "true"
        runweatherapp:
          sources:
            /home/ec2-user: "https://github.com/krisrad/dock-cont-lab/archive/master.zip"
          commands:
            00_permissions:
              command: "chmod 755 /home/ec2-user/dock-cont-lab-master/ -R"
            01_create_volume:
              command: "docker volume create missionstatus"
            02_copy_to_volume:
              cwd: "/home/ec2-user/dock-cont-lab-master/dbd-10-persistent-data-volumes/volumes"
              command: "cp -r . /var/lib/docker/volumes/missionstatus/_data/"
            03_run_apache_with_volume:
              command: "docker container run -d --name fishin-mission -p 80:80 --mount source=missionstatus,target=/usr/local/apache2/htdocs httpd"
Outputs:
  ec2pubIp:
    Description: Public IP address of EC2 instance
    Value: !GetAtt ec2Instance.PublicIp
  ec2pvtIp:
    Description: Private IP address of EC2 instance
    Value: !GetAtt ec2Instance.PrivateIp
